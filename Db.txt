 ----------------------User Schema----------------------------------
 import mongoose from "mongoose";

const userSchema = new mongoose.Schema({
    name: {type : String,required:true},
    email: {type : String,required:true,unique:true},
    password:{type:String,required:true},
    role:{type:String,enum:["owner","user"],default:'user'},
    name: {type : String,default:''},
    image:{type:String,default:''}

},{timestamps:true})

const User = mongoose.model('User',userSchema);

export default User;


-------------------------------Booking Schema-----------------------------
import mongoose from "mongoose";
const {ObjectId} = mongoose.Schema.Types;

const bookingSchema = new mongoose.Schema({

    property:{type:ObjectId,ref:"Property",required:true},
    user:{type:ObjectId,ref:"User",required:true},
    owner:{type:ObjectId,ref:"User",required:true},
    startDate:{type:Date,required:true},
    returnDate:{type:Date,required:true},
    status:{type:String,enum:["pending","confirmed","cancelled"],default:"pending" },
    price:{type:Number,required:true}

},{timestamps:true})

const Booking = mongoose.model('Booking',bookingSchema)

export default Booking;

--------------------------------------Property Scehma----------------------------
import mongoose from "mongoose";
const {ObjectId} = mongoose.Schema.Types;

const propertySchema = new mongoose.Schema({
    owner:{type : ObjectId , ref:'User'},
    type:{type: String, required:true},
    image:{type: String, required:true},
    year:{type: Number, required:true},
    floorSize:{type: String, required:true},
    population_capacity:{type: String, required:true},
    petsAllowed:{type: String, required:true},
    noOfBedroom:{type: String, required:true},
    pricePerDay:{type:String,required:true},
    location:{type:String,required:true},
    description:{type:String,required:true},
    isAvailable:{type:Boolean,default:true}
},{timestamps:true})

const Property = mongoose.model('Property',propertySchema)

export default Property;